# Makefile.in generated by automake 1.16.5 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# test-suite (run with 'make check')

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libfyaml
pkgincludedir = $(includedir)/libfyaml
pkglibdir = $(libdir)/libfyaml
pkglibexecdir = $(libexecdir)/libfyaml
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = aarch64-apple-darwin23.4.0
host_triplet = aarch64-apple-darwin23.4.0
target_triplet = aarch64-apple-darwin23.4.0
#check_PROGRAMS = libfyaml-test$(EXEEXT)

# the private tests require static compilation
# if we're compiling shared only, disable the private parts
#am__append_1 = \
#	libfyaml-test-private.c \
#	libfyaml-test-private-id.c

#am__append_2 = -static
#am__append_3 = libfyaml.test

# normal YAML testsuite
am__append_4 = testsuite.test

# YAML testsuite JSON generation
am__append_5 = testsuite-json.test

# normal JSON testsuite

# normal YAML testsuite using document event stream

# resolution equivalence
am__append_6 = jsontestsuite.test \
	testsuite-evstream.test \
	testsuite-resolution.test
subdir = test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_enable_debug.m4 \
	$(top_srcdir)/m4/ax_check_flag.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/shave.m4 $(top_srcdir)/.libtool-version \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__libfyaml_test_SOURCES_DIST = libfyaml-test.c libfyaml-test-core.c \
	libfyaml-test-meta.c libfyaml-test-emit.c \
	libfyaml-test-private.c libfyaml-test-private-id.c
#am__objects_1 = libfyaml_test-libfyaml-test-private.$(OBJEXT) \
#	libfyaml_test-libfyaml-test-private-id.$(OBJEXT)
#am_libfyaml_test_OBJECTS = libfyaml_test-libfyaml-test.$(OBJEXT) \
#	libfyaml_test-libfyaml-test-core.$(OBJEXT) \
#	libfyaml_test-libfyaml-test-meta.$(OBJEXT) \
#	libfyaml_test-libfyaml-test-emit.$(OBJEXT) \
#	$(am__objects_1)
libfyaml_test_OBJECTS = $(am_libfyaml_test_OBJECTS)
am__DEPENDENCIES_1 =
#libfyaml_test_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(top_builddir)/src/libfyaml.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libfyaml_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libfyaml_test_CFLAGS) \
	$(CFLAGS) $(libfyaml_test_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/libfyaml_test-libfyaml-test-core.Po \
	./$(DEPDIR)/libfyaml_test-libfyaml-test-emit.Po \
	./$(DEPDIR)/libfyaml_test-libfyaml-test-meta.Po \
	./$(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Po \
	./$(DEPDIR)/libfyaml_test-libfyaml-test-private.Po \
	./$(DEPDIR)/libfyaml_test-libfyaml-test.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libfyaml_test_SOURCES)
DIST_SOURCES = $(am__libfyaml_test_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__extra_recursive_targets = doc-help-recursive doc-html-recursive \
	doc-latexpdf-recursive doc-man-recursive doc-clean-recursive \
	doc-markdown-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/missing' aclocal-1.16
ACLOCAL_AMFLAGS = -I m4
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AM_MAKEFLAGS = `test -z $V && echo -s`
AR = ar
AS = as
ASAN_CFLAGS = 
ASAN_LIBS = 
AUTOCONF = ${SHELL} '/Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/missing' automake-1.16
AWK = awk
CC = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave cc gcc
CCAS = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave ccas gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS = -D_THREAD_SAFE -pthread -Wall -Wsign-compare -fvisibility=hidden -O2
CHECK_CFLAGS = 
CHECK_LDFLAGS = 
CHECK_LIBS = 
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave cxx g++ -std=gnu++11
CXXCPP = g++ -std=gnu++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOCKER = /Users/kdubb/.rd/bin/docker
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
EXTRA = 
F77 = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave f77 
FC = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave fc 
FGREP = /usr/bin/grep -F
FILECMD = file
GIT = /usr/bin/git
GREP = /usr/bin/grep
HAVE_ASAN = 0
HAVE_CHECK = 0
HAVE_COMPATIBLE_CHECK = 0
HAVE_DEVMODE = 1
HAVE_LIBCLANG = 0
HAVE_LIBYAML = 1
HAVE_NETWORK = 1
HAVE_PORTABLE_TARGET = 0
HAVE_QSORT_R = 1
HAVE_STATIC = 1
INSTALL = /opt/homebrew/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JQ = /opt/homebrew/bin/jq
JSONTESTSUITECHECKOUT = d64aefb55228d9584d3e5b2433f720ea8fd00c82
JSONTESTSUITEURL = https://github.com/nst/JSONTestSuite
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LEX = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave lex 
LIBCLANG_CFLAGS = 
LIBCLANG_CPPFLAGS = 
LIBCLANG_LDFLAGS = 
LIBCLANG_LIBS = 
LIBLTDL = 
LIBOBJS = 
LIBS =  -lpthread
LIBTOOL = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave-libtool '$(SHELL) $(top_builddir)/libtool'
LIBTOOL_VERSION = 1:4:2
LIBYAML_CFLAGS = -I/opt/homebrew/Cellar/libyaml/0.2.5/include
LIBYAML_LIBS = -L/opt/homebrew/Cellar/libyaml/0.2.5/lib -lyaml
LIPO = lipo
LLVM_CONFIG = 
LN_S = ln -s
LTDLINCL = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
M4 = /usr/bin/m4
MAJOR = 0
MAKEFLAGS = -s
MAKEINFO = ${SHELL} '/Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/missing' makeinfo
MANIFEST_TOOL = :
MCS = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave mcs 
MINOR = 9
MKDIR_P = /opt/homebrew/bin/gmkdir -p
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJC = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave objc 
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = libfyaml
PACKAGE_BUGREPORT = pantelis.antoniou@konsulko.com
PACKAGE_NAME = libfyaml
PACKAGE_STRING = libfyaml 0.9
PACKAGE_TARNAME = libfyaml
PACKAGE_URL = 
PACKAGE_VERSION = 0.9
PATCH = 
PATH_SEPARATOR = :
PIP3 = 
PKG_CONFIG = /opt/homebrew/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE -pthread
PTHREAD_LIBS = -lpthread
Q = $(V:1=)
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SPHINX = 
STRIP = strip
TESTSUITECHECKOUT = 6e6c296ae9c9d2d5c4134b4b64d01b29ac19ff6f
TESTSUITEURL = https://github.com/yaml/yaml-test-suite
V = @
VERSION = 0.9
YACC = /bin/sh /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/shave yacc 
abs_builddir = /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/test
abs_srcdir = /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/test
abs_top_builddir = /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml
abs_top_srcdir = /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = aarch64-apple-darwin23.4.0
build_alias = 
build_cpu = aarch64
build_os = darwin23.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = aarch64-apple-darwin23.4.0
host_alias = 
host_cpu = aarch64
host_os = darwin23.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shavedir = /Users/kdubb/Projects/outfoxx/PotentCodables/Sources/Cfyaml/build-aux
srcdir = .
subdirs =  libltdl
sysconfdir = ${prefix}/etc
target = aarch64-apple-darwin23.4.0
target_alias = 
target_cpu = aarch64
target_os = darwin23.4.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = \
        -I$(top_srcdir)/include

AM_CFLAGS = 
AM_TESTS_ENVIRONMENT = \
	TOP_SRCDIR="${top_srcdir}" \
	TOP_BUILDDIR="${top_builddir}" \
	SRCDIR="${srcdir}" \
	BUILDDIR="${builddir}" \
	JQ="/opt/homebrew/bin/jq"

TESTS_ENVIRONMENT = \
	TOP_SRCDIR="${top_srcdir}" \
	TOP_BUILDDIR="${top_builddir}" \
	SRCDIR="${srcdir}" \
	BUILDDIR="${builddir}" \
	JQ="/opt/homebrew/bin/jq"


# TEST_EXTENSIONS = .test
TEST_LOG_COMPILE = $(SHELL)
TEST_LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(top_srcdir)/build-aux/tap-driver.sh
TESTS = $(am__append_3) $(am__append_4) $(am__append_5) \
	$(am__append_6) testerrors.test testemitter.test \
	testemitter-streaming.test
#libfyaml_test_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)/src/valgrind/ \
#			 -I$(top_srcdir)/src/lib/ \
#			 -I$(top_srcdir)/src/util

#libfyaml_test_LDADD = $(AM_LDADD) $(CHECK_LIBS) $(top_builddir)/src/libfyaml.la
#libfyaml_test_CFLAGS = $(AM_CFLAGS) $(CHECK_CFLAGS) 
#libfyaml_test_LDFLAGS = $(AM_LDFLAGS) \
#	$(CHECK_LDFLAGS) $(am__append_2)
#libfyaml_test_SOURCES = libfyaml-test.c \
#	libfyaml-test-core.c \
#	libfyaml-test-meta.c \
#	libfyaml-test-emit.c \
#	$(am__append_1)

# Add the error test files

# Add the emitter test files
EXTRA_DIST = test-env $(TESTS) test-errors/0002/=== \
	test-errors/0002/in.yaml test-errors/0002/test.error \
	test-errors/0003/=== test-errors/0003/in.yaml \
	test-errors/0003/test.error test-errors/0004/=== \
	test-errors/0004/in.yaml test-errors/0004/test.error \
	test-errors/0005/=== test-errors/0005/in.yaml \
	test-errors/0005/test.error test-errors/0006/=== \
	test-errors/0006/in.yaml test-errors/0006/test.error \
	test-errors/0007/=== test-errors/0007/in.yaml \
	test-errors/0007/test.error test-errors/0008/=== \
	test-errors/0008/in.yaml test-errors/0008/test.error \
	test-errors/0009/=== test-errors/0009/in.yaml \
	test-errors/0009/test.error test-errors/0010/=== \
	test-errors/0010/in.yaml test-errors/0010/test.error \
	test-errors/0011/=== test-errors/0011/in.yaml \
	test-errors/0011/test.error emitter-examples/anchors-1.yaml \
	emitter-examples/anchors-2.yaml \
	emitter-examples/anchors-3.yaml \
	emitter-examples/anchors-4.1.yaml \
	emitter-examples/anchors-4.yaml \
	emitter-examples/anchors-on-empty-scalars1.yaml \
	emitter-examples/anchors-on-empty-scalars2.yaml \
	emitter-examples/anchors-on-empty-scalars3.yaml \
	emitter-examples/anchors-on-empty-scalars4.yaml \
	emitter-examples/anchors-on-empty-scalars.yaml \
	emitter-examples/anchors.yaml emitter-examples/array.yaml \
	emitter-examples/block2.yaml emitter-examples/block3.yaml \
	emitter-examples/block4.yaml emitter-examples/block6.yaml \
	emitter-examples/block7.yaml emitter-examples/blocked.yaml \
	emitter-examples/blockind.yaml emitter-examples/block.yaml \
	emitter-examples/c10.yaml emitter-examples/c11.yaml \
	emitter-examples/c12.yaml emitter-examples/c13.yaml \
	emitter-examples/c1.yaml emitter-examples/c2.yaml \
	emitter-examples/c3.yaml emitter-examples/c4.yaml \
	emitter-examples/c5.yaml emitter-examples/c6.yaml \
	emitter-examples/c7.yaml emitter-examples/c8.yaml \
	emitter-examples/c9.yaml emitter-examples/compact1.yaml \
	emitter-examples/compactblockmap.yaml \
	emitter-examples/complexkey2.yaml \
	emitter-examples/complexkey3.yaml \
	emitter-examples/complexkey4.yaml \
	emitter-examples/complexkey5.yaml \
	emitter-examples/complexkey6.yaml \
	emitter-examples/complexkey7.yaml \
	emitter-examples/complexkey8.yaml \
	emitter-examples/complexkey9.yaml \
	emitter-examples/complexkey.yaml \
	emitter-examples/docstartend.yaml \
	emitter-examples/dqscalar.yaml emitter-examples/dqzero.yaml \
	emitter-examples/emoji.yaml emitter-examples/emptydoc.yaml \
	emitter-examples/emptykey.yaml \
	emitter-examples/emptystream.yaml emitter-examples/flow1.yaml \
	emitter-examples/flow2.yaml emitter-examples/flow.yaml \
	emitter-examples/fold2.yaml emitter-examples/fold3.yaml \
	emitter-examples/fold4.yaml emitter-examples/fold5.yaml \
	emitter-examples/folded2.yaml emitter-examples/folded.yaml \
	emitter-examples/folding.yaml emitter-examples/fold.yaml \
	emitter-examples/global-tag.yaml emitter-examples/invoice.yaml \
	emitter-examples/json.yaml emitter-examples/keyflow.yaml \
	emitter-examples/keykey2.yaml emitter-examples/keykey.yaml \
	emitter-examples/line.yaml emitter-examples/literal1.yaml \
	emitter-examples/literal2.yaml emitter-examples/literal3.yaml \
	emitter-examples/literal4.yaml emitter-examples/literal.yaml \
	emitter-examples/mapping.yaml \
	emitter-examples/mergekeyspec.yaml \
	emitter-examples/multi-document.yaml \
	emitter-examples/multiline-quoted-key.yaml \
	emitter-examples/multiline-simple-key.yaml \
	emitter-examples/nodeprop2.yaml emitter-examples/nodeprop.yaml \
	emitter-examples/numbers-flow.yaml \
	emitter-examples/numbers.yaml emitter-examples/plainlines.yaml \
	emitter-examples/plain-scalars-with-commas.yaml \
	emitter-examples/plainscalar.yaml \
	emitter-examples/quotedbackslash.yaml \
	emitter-examples/quoted.yaml \
	emitter-examples/scalar-multiline.yaml \
	emitter-examples/scalars2.yaml \
	emitter-examples/scalar-singlequoted.yaml \
	emitter-examples/scalar-space1.yaml \
	emitter-examples/scalar-space.yaml \
	emitter-examples/scalars.yaml \
	emitter-examples/scanner-c-10.yaml \
	emitter-examples/scanner-c-11.yaml \
	emitter-examples/scanner-c-12.yaml \
	emitter-examples/scanner-c-13.yaml \
	emitter-examples/scanner-c-1.yaml \
	emitter-examples/scanner-c-2.yaml \
	emitter-examples/scanner-c-3.yaml \
	emitter-examples/scanner-c-4.yaml \
	emitter-examples/scanner-c-5.yaml \
	emitter-examples/scanner-c-6.yaml \
	emitter-examples/scanner-c-7.yaml \
	emitter-examples/scanner-c-8-2.yaml \
	emitter-examples/scanner-c-8.yaml \
	emitter-examples/scanner-c-9.yaml emitter-examples/seq1.yaml \
	emitter-examples/seq2.yaml emitter-examples/seq3.yaml \
	emitter-examples/seq4.yaml emitter-examples/seq5.yaml \
	emitter-examples/seq6.yaml emitter-examples/seq.yaml \
	emitter-examples/sets.yaml emitter-examples/simple1.yaml \
	emitter-examples/simple2.yaml \
	emitter-examples/simpleanchor1.yaml \
	emitter-examples/simpleanchor2.yaml \
	emitter-examples/simpleanchor3.yaml \
	emitter-examples/simpleanchor4.yaml \
	emitter-examples/simpleanchor.yaml \
	emitter-examples/simplefolded.yaml \
	emitter-examples/simplekey1.yaml \
	emitter-examples/simplekey2.yaml \
	emitter-examples/simplekey3.yaml \
	emitter-examples/simplekey4.yaml \
	emitter-examples/simplekey5.yaml \
	emitter-examples/simplekey.yaml \
	emitter-examples/simpleliteral.yaml \
	emitter-examples/simpleseq1.yaml \
	emitter-examples/simpleseq.yaml emitter-examples/simple.yaml \
	emitter-examples/singlepairimp2.yaml \
	emitter-examples/singlepairimp.yaml \
	emitter-examples/sqscalarspace.yaml \
	emitter-examples/sqscalar.yaml emitter-examples/strings.yaml \
	emitter-examples/t1.yaml emitter-examples/t2.yaml \
	emitter-examples/t3.yaml emitter-examples/t4.yaml \
	emitter-examples/t5.yaml emitter-examples/tabsmix.yaml \
	emitter-examples/tagdirective.yaml \
	emitter-examples/tagesc.yaml emitter-examples/tags-1.yaml \
	emitter-examples/tags.yaml emitter-examples/test1.yaml \
	emitter-examples/test2.yaml emitter-examples/test.yaml \
	emitter-examples/t.yaml emitter-examples/u1.yaml \
	emitter-examples/u2.yaml emitter-examples/u3.yaml \
	emitter-examples/utf8-simple.yaml emitter-examples/utf8.yaml \
	emitter-examples/u.yaml emitter-examples/v1.yaml \
	emitter-examples/v2.yaml emitter-examples/version.yaml \
	emitter-examples/v.yaml emitter-examples/weirdplain.yaml \
	emitter-examples/ws0.yaml emitter-examples/ws1.yaml \
	emitter-examples/ws2.yaml emitter-examples/ws3.yaml \
	emitter-examples/yaml-version.yaml emitter-examples/y.yaml \
	emitter-examples/yy.yaml emitter-examples/zeroexplicit.yaml
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

libfyaml-test$(EXEEXT): $(libfyaml_test_OBJECTS) $(libfyaml_test_DEPENDENCIES) $(EXTRA_libfyaml_test_DEPENDENCIES) 
	@rm -f libfyaml-test$(EXEEXT)
	$(AM_V_CCLD)$(libfyaml_test_LINK) $(libfyaml_test_OBJECTS) $(libfyaml_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libfyaml_test-libfyaml-test-core.Po # am--include-marker
include ./$(DEPDIR)/libfyaml_test-libfyaml-test-emit.Po # am--include-marker
include ./$(DEPDIR)/libfyaml_test-libfyaml-test-meta.Po # am--include-marker
include ./$(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Po # am--include-marker
include ./$(DEPDIR)/libfyaml_test-libfyaml-test-private.Po # am--include-marker
include ./$(DEPDIR)/libfyaml_test-libfyaml-test.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libfyaml_test-libfyaml-test.o: libfyaml-test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test.o -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test.Tpo -c -o libfyaml_test-libfyaml-test.o `test -f 'libfyaml-test.c' || echo '$(srcdir)/'`libfyaml-test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test.Po
#	$(AM_V_CC)source='libfyaml-test.c' object='libfyaml_test-libfyaml-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test.o `test -f 'libfyaml-test.c' || echo '$(srcdir)/'`libfyaml-test.c

libfyaml_test-libfyaml-test.obj: libfyaml-test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test.obj -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test.Tpo -c -o libfyaml_test-libfyaml-test.obj `if test -f 'libfyaml-test.c'; then $(CYGPATH_W) 'libfyaml-test.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test.Po
#	$(AM_V_CC)source='libfyaml-test.c' object='libfyaml_test-libfyaml-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test.obj `if test -f 'libfyaml-test.c'; then $(CYGPATH_W) 'libfyaml-test.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test.c'; fi`

libfyaml_test-libfyaml-test-core.o: libfyaml-test-core.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-core.o -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-core.Tpo -c -o libfyaml_test-libfyaml-test-core.o `test -f 'libfyaml-test-core.c' || echo '$(srcdir)/'`libfyaml-test-core.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-core.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-core.Po
#	$(AM_V_CC)source='libfyaml-test-core.c' object='libfyaml_test-libfyaml-test-core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-core.o `test -f 'libfyaml-test-core.c' || echo '$(srcdir)/'`libfyaml-test-core.c

libfyaml_test-libfyaml-test-core.obj: libfyaml-test-core.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-core.obj -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-core.Tpo -c -o libfyaml_test-libfyaml-test-core.obj `if test -f 'libfyaml-test-core.c'; then $(CYGPATH_W) 'libfyaml-test-core.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-core.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-core.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-core.Po
#	$(AM_V_CC)source='libfyaml-test-core.c' object='libfyaml_test-libfyaml-test-core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-core.obj `if test -f 'libfyaml-test-core.c'; then $(CYGPATH_W) 'libfyaml-test-core.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-core.c'; fi`

libfyaml_test-libfyaml-test-meta.o: libfyaml-test-meta.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-meta.o -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-meta.Tpo -c -o libfyaml_test-libfyaml-test-meta.o `test -f 'libfyaml-test-meta.c' || echo '$(srcdir)/'`libfyaml-test-meta.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-meta.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-meta.Po
#	$(AM_V_CC)source='libfyaml-test-meta.c' object='libfyaml_test-libfyaml-test-meta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-meta.o `test -f 'libfyaml-test-meta.c' || echo '$(srcdir)/'`libfyaml-test-meta.c

libfyaml_test-libfyaml-test-meta.obj: libfyaml-test-meta.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-meta.obj -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-meta.Tpo -c -o libfyaml_test-libfyaml-test-meta.obj `if test -f 'libfyaml-test-meta.c'; then $(CYGPATH_W) 'libfyaml-test-meta.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-meta.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-meta.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-meta.Po
#	$(AM_V_CC)source='libfyaml-test-meta.c' object='libfyaml_test-libfyaml-test-meta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-meta.obj `if test -f 'libfyaml-test-meta.c'; then $(CYGPATH_W) 'libfyaml-test-meta.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-meta.c'; fi`

libfyaml_test-libfyaml-test-emit.o: libfyaml-test-emit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-emit.o -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-emit.Tpo -c -o libfyaml_test-libfyaml-test-emit.o `test -f 'libfyaml-test-emit.c' || echo '$(srcdir)/'`libfyaml-test-emit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-emit.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-emit.Po
#	$(AM_V_CC)source='libfyaml-test-emit.c' object='libfyaml_test-libfyaml-test-emit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-emit.o `test -f 'libfyaml-test-emit.c' || echo '$(srcdir)/'`libfyaml-test-emit.c

libfyaml_test-libfyaml-test-emit.obj: libfyaml-test-emit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-emit.obj -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-emit.Tpo -c -o libfyaml_test-libfyaml-test-emit.obj `if test -f 'libfyaml-test-emit.c'; then $(CYGPATH_W) 'libfyaml-test-emit.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-emit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-emit.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-emit.Po
#	$(AM_V_CC)source='libfyaml-test-emit.c' object='libfyaml_test-libfyaml-test-emit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-emit.obj `if test -f 'libfyaml-test-emit.c'; then $(CYGPATH_W) 'libfyaml-test-emit.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-emit.c'; fi`

libfyaml_test-libfyaml-test-private.o: libfyaml-test-private.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-private.o -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-private.Tpo -c -o libfyaml_test-libfyaml-test-private.o `test -f 'libfyaml-test-private.c' || echo '$(srcdir)/'`libfyaml-test-private.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-private.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-private.Po
#	$(AM_V_CC)source='libfyaml-test-private.c' object='libfyaml_test-libfyaml-test-private.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-private.o `test -f 'libfyaml-test-private.c' || echo '$(srcdir)/'`libfyaml-test-private.c

libfyaml_test-libfyaml-test-private.obj: libfyaml-test-private.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-private.obj -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-private.Tpo -c -o libfyaml_test-libfyaml-test-private.obj `if test -f 'libfyaml-test-private.c'; then $(CYGPATH_W) 'libfyaml-test-private.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-private.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-private.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-private.Po
#	$(AM_V_CC)source='libfyaml-test-private.c' object='libfyaml_test-libfyaml-test-private.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-private.obj `if test -f 'libfyaml-test-private.c'; then $(CYGPATH_W) 'libfyaml-test-private.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-private.c'; fi`

libfyaml_test-libfyaml-test-private-id.o: libfyaml-test-private-id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-private-id.o -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Tpo -c -o libfyaml_test-libfyaml-test-private-id.o `test -f 'libfyaml-test-private-id.c' || echo '$(srcdir)/'`libfyaml-test-private-id.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Po
#	$(AM_V_CC)source='libfyaml-test-private-id.c' object='libfyaml_test-libfyaml-test-private-id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-private-id.o `test -f 'libfyaml-test-private-id.c' || echo '$(srcdir)/'`libfyaml-test-private-id.c

libfyaml_test-libfyaml-test-private-id.obj: libfyaml-test-private-id.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -MT libfyaml_test-libfyaml-test-private-id.obj -MD -MP -MF $(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Tpo -c -o libfyaml_test-libfyaml-test-private-id.obj `if test -f 'libfyaml-test-private-id.c'; then $(CYGPATH_W) 'libfyaml-test-private-id.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-private-id.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Tpo $(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Po
#	$(AM_V_CC)source='libfyaml-test-private-id.c' object='libfyaml_test-libfyaml-test-private-id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libfyaml_test_CPPFLAGS) $(CPPFLAGS) $(libfyaml_test_CFLAGS) $(CFLAGS) -c -o libfyaml_test-libfyaml-test-private-id.obj `if test -f 'libfyaml-test-private-id.c'; then $(CYGPATH_W) 'libfyaml-test-private-id.c'; else $(CYGPATH_W) '$(srcdir)/libfyaml-test-private-id.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
doc-help-local: 
doc-html-local: 
doc-latexpdf-local: 
doc-man-local: 
doc-clean-local: 
doc-markdown-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#distclean-local:
#distclean-local:
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-core.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-emit.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-meta.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-private.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

doc-clean: doc-clean-am

doc-clean-am: doc-clean-local

doc-help: doc-help-am

doc-help-am: doc-help-local

doc-html: doc-html-am

doc-html-am: doc-html-local

doc-latexpdf: doc-latexpdf-am

doc-latexpdf-am: doc-latexpdf-local

doc-man: doc-man-am

doc-man-am: doc-man-local

doc-markdown: doc-markdown-am

doc-markdown-am: doc-markdown-local

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-core.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-emit.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-meta.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-private-id.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test-private.Po
	-rm -f ./$(DEPDIR)/libfyaml_test-libfyaml-test.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-local \
	distclean-tags distdir doc-clean-am doc-clean-local \
	doc-help-am doc-help-local doc-html-am doc-html-local \
	doc-latexpdf-am doc-latexpdf-local doc-man-am doc-man-local \
	doc-markdown-am doc-markdown-local dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


testsuite.test: test-suite-data.checkout.timestamp
testsuite-json.test: test-suite-data.checkout.timestamp
testsuite-evstream.test: test-suite-data.checkout.timestamp
testsuite-resolution.test: test-suite-data.checkout.timestamp

test-suite-data.checkout.timestamp:
	/usr/bin/git clone -q "https://github.com/yaml/yaml-test-suite" -- test-suite-data && \
	/usr/bin/git -C test-suite-data checkout -q --detach 6e6c296ae9c9d2d5c4134b4b64d01b29ac19ff6f && \
	touch test-suite-data.checkout.timestamp

jsontestsuite.test: json-test-suite-data.checkout.timestamp

json-test-suite-data.checkout.timestamp:
	/usr/bin/git clone -q "https://github.com/nst/JSONTestSuite" -- json-test-suite-data && \
	/usr/bin/git -C json-test-suite-data checkout -q --detach d64aefb55228d9584d3e5b2433f720ea8fd00c82 && \
	touch json-test-suite-data.checkout.timestamp

distclean-local:
	@rm -rf test-suite-data test-suite-data.checkout.timestamp
	@rm -rf json-test-suite-data json-test-suite-data.checkout.timestamp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
